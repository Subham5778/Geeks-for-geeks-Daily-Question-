class Solution {
    public int findSubString(String str) {
         Set<Character> uniqueChars = new HashSet<>();
        for (char c : str.toCharArray()) {
            uniqueChars.add(c);
        }

        int i = 0, j = 0, ans = str.length(), n = uniqueChars.size();
        Map<Character, Integer> charCount = new HashMap<>();

        while (i < str.length()) {
            charCount.put(str.charAt(i), charCount.getOrDefault(str.charAt(i), 0) + 1);
            
            if (charCount.size() == n) {
                while (charCount.get(str.charAt(j)) > 1) {
                    charCount.put(str.charAt(j), charCount.get(str.charAt(j)) - 1);
                    j++;
                }
                ans = Math.min(ans, i - j + 1);
            }
            i++;
        }
        return ans;

        
    }
}
